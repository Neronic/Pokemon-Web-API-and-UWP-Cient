// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemonWebApi.Data;

namespace PokemonWebApi.Data.PokemonMigrations
{
    [DbContext(typeof(PokemonContext))]
    [Migration("20190511232104_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Pokemon")
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PokemonWebApi.Models.Pokemon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("Number");

                    b.Property<int>("RouteID");

                    b.Property<int>("TypesID");

                    b.HasKey("ID");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("RouteID");

                    b.HasIndex("TypesID");

                    b.ToTable("Pokemon");
                });

            modelBuilder.Entity("PokemonWebApi.Models.Region", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("ID");

                    b.HasIndex("RegionName")
                        .IsUnique();

                    b.ToTable("Region");
                });

            modelBuilder.Entity("PokemonWebApi.Models.Route", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RegionID");

                    b.Property<string>("RouteName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("ID");

                    b.HasIndex("RegionID");

                    b.HasIndex("RouteName")
                        .IsUnique();

                    b.ToTable("Route");
                });

            modelBuilder.Entity("PokemonWebApi.Models.Types", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("TypeOne")
                        .HasMaxLength(20);

                    b.Property<string>("TypeTwo")
                        .HasMaxLength(20);

                    b.HasKey("ID");

                    b.HasIndex("TypeName")
                        .IsUnique();

                    b.ToTable("Types");
                });

            modelBuilder.Entity("PokemonWebApi.Models.Pokemon", b =>
                {
                    b.HasOne("PokemonWebApi.Models.Route", "Route")
                        .WithMany("Pokemons")
                        .HasForeignKey("RouteID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PokemonWebApi.Models.Types", "Types")
                        .WithMany("Pokemons")
                        .HasForeignKey("TypesID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PokemonWebApi.Models.Route", b =>
                {
                    b.HasOne("PokemonWebApi.Models.Region", "Region")
                        .WithMany("Route")
                        .HasForeignKey("RegionID")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
